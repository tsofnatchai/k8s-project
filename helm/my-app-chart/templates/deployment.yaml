apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-consumer-my-app-chart
  labels:
    app: consumer
spec:
  replicas: 1
  selector:
    matchLabels:
      app: consumer
  template:
    metadata:
      labels:
        app: consumer
    spec:
      containers:
        - name: consumer
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: Always
          ports:
            - containerPort: 5672  # RabbitMQ communication port
          env:
            - name: RABBITMQ_HOST
              value: "rabbitmq"  # Ensure this is the correct RabbitMQ service name in Kubernetes
            - name: RABBITMQ_PORT
              value: "5672"
          command: ["python", "consumer.py", "-p", "5672", "-s", "rabbitmq"]
          resources:
            requests:
              memory: "64Mi"
              cpu: "250m"
            limits:
              memory: "128Mi"
              cpu: "500m"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-producer-my-app-chart
  labels:
    app: producer
spec:
  replicas: 1
  selector:
    matchLabels:
      app: producer
  template:
    metadata:
      labels:
        app: producer
    spec:
      containers:
        - name: producer
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: Always
          ports:
            - containerPort: 5672  # RabbitMQ communication port
          env:
            - name: RABBITMQ_HOST
              value: "rabbitmq"  # Ensure this is the correct RabbitMQ service name in Kubernetes
            - name: RABBITMQ_PORT
              value: "5672"
          command: ["python", "producer.py", "-p", "5672", "-s", "rabbitmq", "-m", "Hello", "-r", "30"]
          resources:
            requests:
              memory: "64Mi"
              cpu: "250m"
            limits:
              memory: "128Mi"
              cpu: "500m"