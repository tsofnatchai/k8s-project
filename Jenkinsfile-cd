pipeline {
    agent any

    environment {
        KUBECONFIG = "C:\\Users\\TsofnatChai\\.kube\\config" // Update the correct kubeconfig path on Windows
        HELM_RELEASE_NAME = "release"
        HELM_CHART_PATH = "./helm/my-app-chart"  // Adjusted path to the Helm chart
        RABBITMQ_RELEASE_NAME = "rabbitmq"
        RABBITMQ_CHART = "bitnami/rabbitmq"
        EXPORTER_DEPLOYMENT = "exporter-deployment.yaml"
        EXPORTER_SERVICE = "exporter-service.yaml"
        PRODUCER_IMAGE = 'tsofnatg/producer'
        CONSUMER_IMAGE = 'tsofnatg/consumer'
        HELM_RELEASE_NAME_PRODUCER = "release-producer"   // Unique release name for producer
        HELM_RELEASE_NAME_CONSUMER = "release-consumer"   // Unique release name for consumer
    }

    stages {
        stage('Checkout Helm Charts Repository') {
            steps {
                git url: 'https://github.com/tsofnatchai/k8s-project.git', branch: 'main'
            }
        }

        stage('Configure Kubernetes Access') {
            steps {
                script {
                    bat "kubectl config view"  // Verify Kube config
                    bat "kubectl get nodes"    // Verify connection to cluster
                }
            }
        }

        stage('Deploy RabbitMQ') {
            steps {
                script {
                    bat "helm repo add bitnami https://charts.bitnami.com/bitnami"
                    bat "helm repo update"
                    bat "helm upgrade --install ${RABBITMQ_RELEASE_NAME} ${RABBITMQ_CHART} --set auth.username=tsofnat --set auth.password=Guliguli1"
                }
            }
        }
        stage('Wait for RabbitMQ to be Ready') {
            steps {
                script {
                    // Wait for RabbitMQ to be ready before continuing to deploy the consumer and producer
                    bat "kubectl rollout status deployment/rabbitmq-0 --timeout=5m"
                }
            }
        }
        // Deploy producer application
        stage('Deploy Producer Application') {
            steps {
                script {
                    bat "helm upgrade --install ${HELM_RELEASE_NAME_PRODUCER} ${HELM_CHART_PATH} --set image.repository=${PRODUCER_IMAGE} --set image.tag=latest --values ${HELM_CHART_PATH}/values.yaml"
                }
            }
        }

        // Deploy consumer application
        stage('Deploy Consumer Application') {
            steps {
                script {
                    bat "helm upgrade --install ${HELM_RELEASE_NAME_CONSUMER} ${HELM_CHART_PATH} --set image.repository=${CONSUMER_IMAGE} --set image.tag=latest --values ${HELM_CHART_PATH}/values.yaml"
                }
            }
        }

        stage('Deploy RabbitMQ Exporter') {
            steps {
                script {
                    bat "kubectl apply -f ${EXPORTER_DEPLOYMENT}"
                    bat "kubectl apply -f ${EXPORTER_SERVICE}"
                }
            }
        }
    }

    post {
        success {
            echo '✅ Deployment Successful!'
        }
        failure {
            echo '❌ Deployment Failed. Check logs for details.'
        }
    }
}
